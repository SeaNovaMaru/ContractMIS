<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ruoyi.system.mapper.SysContractMapper">
    <resultMap id="baseMap" type="com.ruoyi.common.core.domain.entity.ContractInfo">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="contract_name" property="contractName" jdbcType="VARCHAR"/>
        <result column="contract_type" property="contractType" jdbcType="INTEGER"/>
        <result column="contract_template" property="contractTemplate" jdbcType="VARCHAR"/>
        <result column="contract_template_name" property="contractTemplateName" jdbcType="VARCHAR"/>
        <result column="contract_file" property="contractFile" jdbcType="VARCHAR"/>
        <result column="contract_file_name" property="contractFileName" jdbcType="VARCHAR"/>
        <result column="need_law_supervise" property="needLawSupervise" jdbcType="INTEGER"/>
        <result column="not_supervise_reason" property="notSuperviseReason" jdbcType="INTEGER"/>
        <result column="contract_status" property="contractStatus" jdbcType="VARCHAR"/>
        <result column="owner" property="owner" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="verify_result" property="verifyResult" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="update_time" property="updateTime" jdbcType="DATE"/>
        <result column="law_file" property="lawFile" jdbcType="VARCHAR"/>
        <result column="law_file_status" property="lawFileStatus" jdbcType="INTEGER"/>
    </resultMap>


    <sql id="userCols">
        uuid
        , contract_name, contract_type, contract_template, contract_template_name, contract_file,
        contract_file_name, need_law_supervise, not_supervise_reason, contract_status, owner, verify_result,
        create_time, update_time
    </sql>


    <insert id="saveContract" parameterType="com.ruoyi.common.core.domain.entity.ContractInfo">
        REPLACE INTO sys_contract_info
        (<include refid="userCols"></include>)
        VALUES
        (
        #{contractInfo.uuid},
        #{contractInfo.contractName},
        #{contractInfo.contractType},
        #{contractInfo.contractTemplate},
        #{contractInfo.contractTemplateName},
        #{contractInfo.contractFile},
        #{contractInfo.contractFileName},
        #{contractInfo.needLawSupervise},
        #{contractInfo.notSuperviseReason},
        #{contractInfo.contractStatus},
        #{contractInfo.owner},
        #{contractInfo.verifyResult},
        #{contractInfo.createTime},
        NOW()
        )
    </insert>

    <update id="updateContract" parameterType="com.ruoyi.common.core.domain.entity.ContractInfo">
        update sys_contract_info
        <set>
            <if test="contractInfo.contractName != null and contractInfo.contractName != ''">
                contract_name=#{contractInfo.contractName},
            </if>
            <if test="contractInfo.contractType != null">
                contract_type=#{contractInfo.contractType},
            </if>
            <if test="contractInfo.contractTemplate != null and contractInfo.contractTemplate != ''">
                contract_template=#{contractInfo.contractTemplate},
            </if>
            <if test="contractInfo.contractTemplateName != null and contractInfo.contractTemplateName != ''">
                contract_template_name=#{contractInfo.contractTemplateName},
            </if>
            <if test="contractInfo.contractFile != null and contractInfo.contractFile != ''">
                contract_file=#{contractInfo.contractFile},
            </if>
            <if test="contractInfo.contractFileName != null and contractInfo.contractFileName != ''">
                contract_file_name=#{contractInfo.contractFileName},
            </if>
            <if test="contractInfo.needLawSupervise != null">
                need_law_supervise=#{contractInfo.needLawSupervise},
            </if>
            <if test="contractInfo.notSuperviseReason != null">
                not_supervise_reason=#{contractInfo.notSuperviseReason},
            </if>
            <if test="contractInfo.contractStatus != null and contractInfo.contractStatus != ''">
                contract_status=#{contractInfo.contractStatus},
            </if>
            <if test="contractInfo.owner != null and contractInfo.owner != ''">
                owner=#{contractInfo.owner},
            </if>
            <if test="contractInfo.verifyResult != null and contractInfo.verifyResult != ''">
                verify_result=#{contractInfo.verifyResult},
            </if>
            uuid = #{contractInfo.uuid}, update_time = NOW()
        </set>
        where uuid = #{contractInfo.uuid}
    </update>

    <select id="queryList" resultType="com.ruoyi.common.core.domain.model.contract.ContractListRes">
        select distinct
        contract.uuid as uuid,
        contract.contract_name as contractName,
        contract.contract_status as contractStatus,
        contract.contract_type as contractType,
        contract.need_law_supervise as needLawSupervise,
        contract.not_supervise_reason as notSuperviseReason,
        userInfo.nick_name as owner,
        contract.owner as userId,
        contract.create_time as createTime,
        contract.update_time as updateTime
        from
        sys_contract_info contract
        left join sys_execution_info execution on execution.uuid = contract.uuid
        inner join sys_user userInfo on userInfo.user_id = contract.owner
        where 1=1
        <if test="param.userRoles != null and param.userRoles.size() > 0 and param.userId != null">
            AND
            <foreach collection="param.userRoles" item="role" separator="OR" open="(" close=")">
                <choose>
                    <when test="role ==1">
                        (contract.owner is not null)
                    </when>
                    <when test="role == 2">
                        (contract.owner = #{param.userId})
                    </when>
                    <when test="role == 3">
                        (contract.owner = #{param.userId} OR contract.contract_status = 2 OR execution.execution_user =
                        #{param.userId})
                    </when>
                    <when test="role == 4">
                        (contract.owner = #{param.userId} OR contract.contract_status = 3 OR execution.execution_user =
                        #{param.userId})
                    </when>
                    <when test="role == 5">
                        (contract.owner = #{param.userId} OR contract.contract_status = 4 OR execution.execution_user =
                        #{param.userId})
                    </when>
                    <otherwise>
                        (contract.owner = #{param.userId})
                    </otherwise>
                </choose>
            </foreach>
        </if>
        <if test="param.contractName != null and param.contractName != ''">
            AND contract.contract_name like concat('%', #{param.contractName}, '%')
        </if>
        <if test="param.contractStatus != null and param.contractStatus != ''">
            AND contract.contract_status = #{param.contractStatus}
        </if>
    </select>

    <select id="getDetail" resultMap="baseMap">
        select contract.*, userInfo.nick_name as userName
        from sys_contract_info contract
                 left join sys_user userInfo on userInfo.user_id = contract.owner
        where uuid = #{uuid}
    </select>

    <update id="updateContractInfo">
        update sys_contract_info contract
        set law_file        = #{url},
            law_file_status = #{status}
        where uuid = #{uuid}
    </update>
</mapper>